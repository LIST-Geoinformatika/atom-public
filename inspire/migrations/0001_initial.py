# Generated by Django 4.1 on 2024-03-25 13:33

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="CRS",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("epsg_code", models.IntegerField()),
                ("label", models.CharField(max_length=255)),
            ],
            options={
                "verbose_name_plural": "CRS",
            },
        ),
        migrations.CreateModel(
            name="DatasetServiceFeed",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=255)),
                ("title_EN", models.CharField(max_length=255)),
                ("subtitle", models.CharField(max_length=255)),
                ("subtitle_EN", models.CharField(max_length=255)),
                ("self_link", models.URLField()),
                ("rights", models.TextField()),
                ("rights_EN", models.TextField()),
                ("updated_on", models.DateTimeField(auto_now=True)),
                ("author_name", models.CharField(max_length=255)),
                ("author_email", models.EmailField(max_length=254)),
                ("link_to_gml_file", models.URLField()),
                ("link_to_shapefile", models.URLField()),
                ("uid", models.UUIDField(default=uuid.uuid4, editable=False)),
                ("summary", models.TextField()),
                ("summary_EN", models.TextField()),
                ("metadata_record", models.URLField()),
                ("spatial_dataset_identifier_namespace", models.URLField()),
                ("spatial_dataset_identifier_code", models.CharField(max_length=255)),
                ("crs", models.ManyToManyField(to="inspire.crs")),
            ],
        ),
        migrations.CreateModel(
            name="DatasetServices",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("service_name", models.CharField(max_length=255, unique=True)),
                ("service_name_EN", models.CharField(max_length=255, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name="DownloadServiceFeed",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=255)),
                ("title_EN", models.CharField(max_length=255)),
                ("subtitle", models.TextField()),
                ("subtitle_EN", models.TextField()),
                ("link_to_download_service_iso19139", models.URLField()),
                ("self_link", models.URLField()),
                ("opensearch_link", models.URLField()),
                ("uid", models.UUIDField(default=uuid.uuid4, editable=False)),
                ("rights", models.TextField()),
                ("rights_EN", models.TextField()),
                ("updated_on", models.DateTimeField(auto_now=True)),
                ("author_name", models.CharField(max_length=255)),
                ("author_email", models.EmailField(max_length=254)),
            ],
        ),
        migrations.CreateModel(
            name="HarmonizedDatasetFile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("uploaded_on", models.DateTimeField(auto_now=True)),
                ("file", models.FileField(null=True, upload_to="harmonized/")),
                (
                    "crs",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="inspire.crs"
                    ),
                ),
                (
                    "dataset_service_feed",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="inspire.datasetservicefeed",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Harmonized Dataset Files",
            },
        ),
        migrations.AddField(
            model_name="datasetservicefeed",
            name="download_service_feed",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="inspire.downloadservicefeed",
            ),
        ),
        migrations.AddField(
            model_name="datasetservicefeed",
            name="service",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="inspire.datasetservices",
            ),
        ),
    ]
